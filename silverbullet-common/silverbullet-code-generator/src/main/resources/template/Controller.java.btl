package com.${context.prjPackage}.${context.modulePackage}.controller;

<% for(import in controller.imports!){ %>
import ${import};
<% } %>

/**
 * ${context.bizChName} 控制器
 * Created by jeffyuan on 2018/2/11.
 */
@Controller
@RequestMapping(value = "/${context.modulePackage}/${context.bizEnNameSmall}")
public class ${context.bizEnName}Controller {

    @Autowired
    private I${context.bizEnName}Service ${context.bizEnNameCapSmall}Service;

    <% if (context.navigationType == "local") {%>
    @RequestMapping(value = "/list/pub.html", method = RequestMethod.GET)
    public ModelAndView index(){
        int nCurPage = 1;

    <%} else {%>

    @RequestMapping(value = "/list/{curpage}.html", method = RequestMethod.GET)
    public ModelAndView index(@PathVariable("curpage") String curpage){
        int nCurPage = 1;
        if (curpage != null) {
             nCurPage = Integer.valueOf(curpage);
        }
    <% } %>
        ModelAndView modelAndView = new ModelAndView();
        modelAndView.setViewName("/${context.bizEnName}/list");

        BaseDataResult<${context.bizEnName}> results = ${context.bizEnNameCapSmall}Service.list(nCurPage, 5);

        modelAndView.addObject("results", results);
        modelAndView.addObject("curPage", nCurPage);

        return modelAndView;
    }

    @RequestMapping(value = "/list.html", method = RequestMethod.POST)
    public ModelAndView listData(String curpage){
        int nCurPage = 1;
        if (curpage != null) {
            nCurPage = Integer.valueOf(curpage);
        }

        ModelAndView modelAndView = new ModelAndView();
        modelAndView.setViewName("/${context.bizEnName}/listContent");

        BaseDataResult<${context.bizEnName}> results = ${context.bizEnNameCapSmall}Service.list(nCurPage, 5);

        modelAndView.addObject("results", results);
        modelAndView.addObject("curPage", nCurPage);

        return modelAndView;
     }

    @RequestMapping(value = "/add.html", method = RequestMethod.POST)
    public String add(Model model) {
        return "/${context.bizEnName}/model";
    }

    @RequestMapping(value = "/edit.html", method = RequestMethod.POST)
    public String edit(Model model, ${domain.primaryKeyColumn.javaType} id) {
        ${context.bizEnName} ${context.bizEnNameCapSmall} = ${context.bizEnNameCapSmall}Service.getOneById(id);
        model.addAttribute("obj", ${context.bizEnNameCapSmall});

        return "/${context.bizEnName}/model";
    }

    @RequestMapping(value = "/delete.do", method = RequestMethod.POST)
    @ResponseBody
    public Map<String, Object> delete(String ids) {
        Map<String,Object> mapRet = new HashMap<String, Object>();
        if (ids == null || ids.isEmpty()) {
            mapRet.put("result", false);
            return mapRet;
        }

        boolean bRet = ${context.bizEnNameCapSmall}Service.delete(ids);

        mapRet.put("result", bRet);
        return mapRet;
    }

    @RequestMapping(value = "/save.do", method = RequestMethod.POST)
    @ResponseBody
    public Map<String, Object> save(@Validated({AddValidate.class}) ${context.bizEnName} ${context.bizEnNameCapSmall},
                                    BindingResult result) {
        Map<String,Object> mapRet = new HashMap<String, Object>();
        if (result.hasErrors()) {
            mapRet.put("result", false);
            mapRet.put("errors", result.getFieldErrors());
            return mapRet;
        }

        boolean bTrue = false;
        String message = "";
        if (${context.bizEnNameCapSmall}.getId() == null) {
            bTrue = ${context.bizEnNameCapSmall}Service.Insert(${context.bizEnNameCapSmall});
            message = bTrue ? "添加成功！" : "添加失败！";
        } else {
            bTrue = ${context.bizEnNameCapSmall}Service.Update(${context.bizEnNameCapSmall});
            message = bTrue ? "修改成功！" : "修改失败！";
        }

        mapRet.put("result", bTrue);
        mapRet.put("message", message);

        return mapRet;
    }
}
