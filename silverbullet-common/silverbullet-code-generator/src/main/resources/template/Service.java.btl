package com.${context.prjPackage}.${context.modulePackage}.service.impl;

<% for(import in service.imports!){ %>
import ${import};
<% } %>

/**
 * ${context.bizChName} service接口
 * Created by jeffyuan on 2018/2/11.
 */
@Service
public class ${context.bizEnName}Service implements I${context.bizEnName}Service {

    private static final Logger logger = LoggerFactory.getLogger(${context.bizEnName}Service.class);

    @Autowired
    private ${context.bizEnName}Mapper ${context.bizEnNameCapSmall}Mapper;

    @Override
    public int countNum() {
        return ${context.bizEnNameCapSmall}Mapper.countNum();
    }

    @Override
    public BaseDataResult<${context.bizEnName}> list(int pageNum, int pageSize) {
        PageHelper.startPage(pageNum, pageSize);

        BaseDataResult<${context.bizEnName}> listResults = new BaseDataResult<${context.bizEnName}>();
        listResults.setResultList(${context.bizEnNameCapSmall}Mapper.findList());
        listResults.setTotalNum(${context.bizEnNameCapSmall}Mapper.countNum());

        return listResults;
    }

    @Override
    public ${context.bizEnName} getOneById(${domain.primaryKeyColumn.javaType} id) {
        return ${context.bizEnNameCapSmall}Mapper.selectByPrimaryKey(id);
    }

    @Override
    public boolean Update(${context.bizEnName} ${context.bizEnNameCapSmall}) {
        try {
            ${context.bizEnName} ${context.bizEnNameCapSmall}New = getOneById(${context.bizEnNameCapSmall}.getId());

            if (${context.bizEnNameCapSmall}New == null) {
                return false;
            }

            UserInfo userInfo = (UserInfo) SecurityUtils.getSubject().getPrincipal();

            return ${context.bizEnNameCapSmall}Mapper.updateByPrimaryKey(${context.bizEnNameCapSmall}) == 1;
        } catch (Exception ex) {
            logger.error("Update Error: " + ex.getMessage());
            return false;
        }
    }

    @Override
    @Transactional
    public boolean delete(String ids) {
        String [] arrIds = ids.split(",");
        boolean bret = true;
        for (String idTmp : arrIds) {

            ${domain.primaryKeyColumn.javaType} id = null;

            <% if (domain.primaryKeyColumn.javaType != "String") {%>
            try {
                <% if (domain.primaryKeyColumn.javaType == "Integer") {%>
                id = Integer.parseInt(idTmp);
                <% } else if (domain.primaryKeyColumn.javaType == "Integer") {%>
                id = Long.parseLong(idTmp);
                <% } %>
            } catch (Exception ex) {
                throw new RuntimeException("delete faild");
            }
            <% } else  {%>
            id = idTmp;
            <% } %>

            bret = ${context.bizEnNameCapSmall}Mapper.deleteByPrimaryKey(id) == 1;
            if (!bret) {
                throw new RuntimeException("delete faild");
            }
        }

        return bret;
    }

    @Override
    public boolean Insert(${context.bizEnName} ${context.bizEnNameCapSmall}) {
      try {
            UserInfo userInfo = (UserInfo) SecurityUtils.getSubject().getPrincipal();
            <%if(domain.primaryKeyColumn.javaType=="String") {%>
            ${context.bizEnNameCapSmall}.setId(ToolUtil.getUUID());
            <%}%>

            return ${context.bizEnNameCapSmall}Mapper.insert(${context.bizEnNameCapSmall}) == 1;
        } catch (Exception ex) {
            logger.error("Insert Error: " + ex.getMessage());
            return false;
        }
    }
}
